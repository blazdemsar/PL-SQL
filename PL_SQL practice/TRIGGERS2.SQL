/*
CREATE OR REPLACE TRIGGER VWINSERT
INSTEAD OF INSERT ON VWRT
FOR EACH ROW
BEGIN
	INSERT INTO DEPT VALUES(:NEW.DEPTNO, :NEW.DNAME, :NEW.LOC);
	INSERT INTO EMP(EMPNO, ENAME, SAL, DEPTNO) VALUES(:NEW.EMPNO, :NEW.ENAME, :NEW.SAL, :NEW.DEPTNO);
END;
/
*/

/*
CREATE OR REPLACE TRIGGER A111
BEFORE INSERT ON DEPT
BEGIN
	DBMS_OUTPUT.PUT_LINE('BEFORE INSERT STMT LEVEL TRIGGER A111');
END;
/

CREATE OR REPLACE TRIGGER A112
BEFORE INSERT ON DEPT
FOR EACH ROW
BEGIN
	DBMS_OUTPUT.PUT_LINE('BEFORE INSERT STMT LEVEL TRIGGER A112');
END;
/

CREATE OR REPLACE TRIGGER A113
AFTER INSERT ON DEPT
BEGIN
	DBMS_OUTPUT.PUT_LINE('BEFORE INSERT STMT LEVEL TRIGGER A113');
END;
/

CREATE OR REPLACE TRIGGER A114
AFTER INSERT ON DEPT
FOR EACH ROW
BEGIN
	DBMS_OUTPUT.PUT_LINE('BEFORE INSERT STMT LEVEL TRIGGER A114');
END;
/
*/

/*
CREATE OR REPLACE TRIGGER TRINSERT
AFTER INSERT ON DEPT
FOR EACH ROW
BEGIN
	INSERT INTO DEPTCPY VALUES(:NEW.DEPTNO, :NEW.DNAME, :NEW.LOC);
	COMMIT;
END;
/
*/

/*
DECLARE
	PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
	INSERT INTO DEPTCPY VALUES(81, 'KOOKS', 'LJUBLJANA');
	COMMIT;
END;
/
*/

/*
CREATE OR REPLACE TRIGGER TRINSERT
AFTER INSERT ON DEPT
FOR EACH ROW
DECLARE
	PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
	INSERT INTO DEPTCPY VALUES(:NEW.DEPTNO, :NEW.DNAME, :NEW.LOC);
	COMMIT;
END;
/
*/

/*
CREATE OR REPLACE TRIGGER TRINSERT
AFTER INSERT ON DEPT
FOR EACH ROW
DECLARE
	X NUMBER(5);
	PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
	SELECT MAX(DEPTNO) INTO X FROM DEPT;
	DBMS_OUTPUT.PUT_LINE(X);
END;
/
*/


CREATE OR REPLACE TRIGGER STOPDROP
BEFORE RENAME ON DATABASE
BEGIN
	RAISE_APPLICATION_ERROR(-20987, 'RENAMING IS NOT ALLOWED');
END;
/

